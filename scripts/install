#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression "Validating installation parameters..."

# Correct user name
# An unix user name can contains only :alnum: and . - _
# Replace all other characters by _
ssh_user=${ssh_user//[^[:alnum:].\-_]/_}
ynh_app_setting_set --key=ssh_user --value="$ssh_user"

if ynh_system_user_exists "$ssh_user"; then
    ynh_die "This user already exist!"
fi

if test -z "$password" && test -z "$pub_key"; then
    ynh_die "You can't left empty both password and public key. Please fill at least one of them."
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

mkdir -p "$data_dir/$ssh_user"

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL QUOTAS SYSTEM
#=================================================
ynh_script_progression "Install quotas system"

# https://github.com/maniackcrudelis/ssh_chroot/blob/master/unix_quotas/unix_quotas.sh
if ! IS_PACKAGE_CHECK; then
    (
        source "$install_dir/unix_quotas/unix_quotas.sh"
        quotas_install
    )
fi

#=================================================
# CONFIGURE FSTAB TO SUPPORT QUOTAS
#=================================================
ynh_script_progression "Configure fstab to support quotas"

# https://github.com/maniackcrudelis/ssh_chroot/blob/master/unix_quotas/unix_quotas.sh
# Set fstab
if ! IS_PACKAGE_CHECK; then
    (
        source "$install_dir/unix_quotas/unix_quotas.sh"

        quotas_find_mount_point "$user_dir"
        quotas_set_fstab "$quotas_mount_point"

        # Activate quotas
        quotas_activate "$quotas_mount_point"
    )
fi

#=================================================
# CREATE THE USER WITH CHROOT_MANAGER
#=================================================
ynh_script_progression "Create the user with Chroot_manager"

chroot_manager_args=()

if [ -n "$pub_key" ]; then
    chroot_manager_args+=( --sshkey "$pub_key" )
elif [ -n "$password" ]; then
    chroot_manager_args+=( --password "$password" )
fi

if ! IS_PACKAGE_CHECK; then
    "$install_dir/chroot_manager.sh" adduser --name "$ssh_user" "${chroot_manager_args[@]}" --directory "$user_dir" --quota "$size"

    # Allow the user to use ssh
    adduser "$ssh_user" ssh.app
fi

#=================================================
# ADD A LINK TO CHROOT_MANAGER
#=================================================

ln -sf "$install_dir/chroot_manager.sh" "$data_dir/chroot_manager"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R root: "$install_dir"
#=================================================
# DISCLAIMER
#=================================================

if grep --quiet "^AllowUsers" /etc/ssh/sshd_config; then
    ynh_print_warn "Be carreful, your ssh configuration contains an AllowUsers option."
    ynh_print_warn "You should probably add the user $ssh_user to this line."
fi

#=================================================
# END OF SCRIPT
#=================================================

# Not really settings, but required for POST_INSTALL.md
ynh_app_setting_set --key="domain" --value="$(yunohost domain list --json | jq -r '.["main"]')"
ynh_app_setting_set --key="ssh_port" --value="$(grep "^Port " /etc/ssh/sshd_config | awk '{print $2}')"

ynh_script_progression "Installation of $app completed"
